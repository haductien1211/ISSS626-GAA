---
title: "In-class Exercise 8"
author: "Ha Duc Tien"
date: "October 21, 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  warning: false
  message: false
  freeze: true
---

# Packages
```{r}
pacman::p_load(sf, spdep, GWmodel, SpatialML, 
               tmap, rsample, Metrics, tidyverse, ggstatsplot, performance,kableExtra)
```

# The data
```{r}
mdata <- read_rds("data/mdata.rds") %>%
  st_jitter(amount = 1)
```

### `st_jitter()` move points within 1 meter to avoid overlap

```{r}
set.seed(1234)
resale_split <- initial_split(mdata, 
                              prop = 6.5/10,)
train_data <- training(resale_split)
test_data <- testing(resale_split)
```

# Correlation Matrix
```{r, fig.height=10, fig.width=12, dpi=100}
mdata_nogeo <- mdata %>%
  st_drop_geometry()

ggstatsplot::ggcorrmat(mdata_nogeo, 2:17)
```


# Building a non-spactial multiple linear regression

```{r}
price_mlr <- lm(resale_price ~ floor_area_sqm +
                  storey_order + remaining_lease_mths +
                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +
                  PROX_MRT + PROX_PARK + PROX_MALL + 
                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +
                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +
                  WITHIN_1KM_PRISCH,
                data=train_data)

olsrr::ols_regress(price_mlr)
```

# Multicollinearity check with VIF

```{r, fig.height=6, fig.width=12, dpi=100}
vif <- check_collinearity(price_mlr)
kable(vif,
      caption = "Variance Inflation Factor (VIF) Results") %>%
  kable_styling(font_size = 18)

plot(vif)+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
# Predictive Modelling: SpatialML model

```{r}
coords <- st_coordinates(mdata)
coords_train <- st_coordinates(train_data)
coords_test <- st_coordinates(test_data)
```

```{r}
train_data_nogeom <- train_data %>%
  st_drop_geometry()
```

```{r}
set.seed(1234)
rf <- ranger(resale_price ~ floor_area_sqm + storey_order + 
               remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + 
               PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + 
               PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +
               WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + 
               WITHIN_1KM_PRISCH,
             data=train_data_nogeom)
rf
```

```{r}
#| eval: false
set.seed(1234)
gwRF_adaptive <- grf(formula = resale_price ~ floor_area_sqm + storey_order +
                       remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE +
                       PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL +
                       PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +
                       WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +
                       WITHIN_1KM_PRISCH,
                     dframe=train_data_nogeom, 
                     bw=55,
                     kernel="adaptive",
                     coords=coords_train)
```
```{r}
#| eval: false
write_rds(gwRF_adaptive, "data/gwRF_adaptive.rds")
```

```{r}
#| eval: false
gwRF_adaptive <- read_rds("data/gwRF_adaptive.rds")
```

```{r}
test_data_nogeom <- test_data %>%
  st_drop_geometry()
```

```{r}
#| eval: false
gwRF_pred <- predict.grf(gwRF_adaptive,
                         test_data,
                         x.var.name="X",
                         y.var.name="Y",
                         local.w=1,
                         global.w=0)
```

```{r}
#| eval: false
write_rds(gwRF_pred, "data/GRF_pred.rds")
```

```{r}
#| eval: false
gwRF_adaptive <- read_rds("data/gwRF_adaptive.rds")
```