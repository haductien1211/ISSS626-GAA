{
  "hash": "8e1c6bfe48bca9c5eda877e3df5340ff",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 1\"\nauthor: \"Ha Duc Tien\"\ndate: \"August 24, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n# 1. Overview and Objective\n\nPrevious studies have demonstrated the significant potential of Spatial Point Patterns Analysis (SPPA) in exploring and identifying factors influencing road traffic accidents. However, these studies often focus solely on either behavioral or environmental factors, with limited consideration of temporal factors such as season, day of the week, or time of day.\n\n-   In view of this, I am tasked to discover factors affecting road traffic accidents in the Bangkok Metropolitan Region BMR by employing both spatial spatio-temporal point patterns analysis methods.\n\nThe specific objectives of this take-home exercise are as follows:\n\n-   To visualize the spatio-temporal dynamics of road traffic accidents in BMR using appropriate statistical graphics and geovisualization methods.\n-   To conduct detailed spatial analysis of road traffic accidents using appropriate Network Spatial Point Patterns Analysis methods.\n-   To conduct detailed spatio-temporal analysis of road traffic accidents using appropriate Temporal Network Spatial Point Patterns Analysis methods.\n\n# 2. Getting started\n\nIn this exercise, the below R packages will be used. They are:\n\n-   [`sf`](https://r-spatial.github.io/sf/) for importing, managing, and processing geospatial data, and\n-   [`tidyverse`](https://www.tidyverse.org/) for performing data science tasks such as importing, wrangling and visualising data.\n-   [`spatstat`](https://spatstat.org/), which has a wide range of useful functions for point pattern analysis.\n-   [`raster`](https://cran.r-project.org/web/packages/raster/) which reads, writes, manipulates, analyses and model of gridded spatial data\n-   [`maptools`](https://cran.r-project.org/web/packages/maptools/index.html) which provides a set of tools for manipulating geographic data.\n-   [`tmap`](https://cran.r-project.org/web/packages/tmap/index.html) which provides functions for plotting cartographic quality static point patterns maps or interactive maps by using leaflet API.\n-   [spNetwork](https://cran.r-project.org/web/packages/spNetwork/index.html), which provides functions to perform Spatial Point Patterns Analysis such as kernel density estimation (KDE) and K-function on network. It also can be used to build spatial matrices (‘listw’ objects like in ‘spdep’ package) to conduct any kind of traditional spatial analysis with spatial weights based on reticular distances.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(raster, spatstat, tmap, tidyverse, sparr, maptools, spNetwork, sf)\n```\n:::\n\n\n# 3. The data\n\nFor the purpose of this exercise, three basic data sets must be used, they are:\n\n-   [Thailand Road Accident (2019-2022)](https://www.kaggle.com/datasets/thaweewatboy/thailand-road-accident-2019-2022) on Kaggle\n\n-   [Thailand Roads (OpenStreetMap Export)](https://data.humdata.org/dataset/hotosm_tha_roads) on HDX.\n\n-   [Thailand - Subnational Administrative Boundaries](https://data.humdata.org/dataset/cod-ab-tha?) on HDX.\n\n## Importing and wrangling the data\n\nThe below code would import the **Thailand Road Accident (2019-2022)**, make changes to the coordinates by filtering out the ones with empty or NA coordinates then filter out the region of study which is the Bangkok Metropolitan Region BMR and converting the projected coordinate system of data to WGS 84 / UTM zone 47N and the EPSG code is 32647. This step would create `accident_data_sf`\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccident_data_sf <- read_csv(\"data/nongeo/thai_road_accident_2019_2022.csv\") %>%\n  filter(!is.na(longitude) & longitude != \"\",\n         !is.na(latitude) & latitude != \"\") %>%\n  st_as_sf(coords = c(\"longitude\", \"latitude\"), \n           crs = 4326) %>%\n  filter(province_en %in% list(\"Bangkok\", \"Nonthaburi\", \n                                           \"Nakhon Pathom\", \"Pathum Thani\", \n                                           \"Samut Prakan\", \"Samut Sakhon\")) %>%\n  mutate(`incident_monthyear` = format(as.Date(`incident_datetime`), \"%Y/%m\")) %>%\n  mutate(`incident_year` = format(as.Date(`incident_datetime`), \"%Y\")) %>%\n  st_transform(crs = 32647)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(accident_data_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsf [12,986 × 19] (S3: sf/tbl_df/tbl/data.frame)\n $ acc_code                   : num [1:12986] 571882 600001 605043 629691 571887 ...\n $ incident_datetime          : POSIXct[1:12986], format: \"2019-01-01 02:25:00\" \"2019-01-01 03:00:00\" ...\n $ report_datetime            : POSIXct[1:12986], format: \"2019-01-02 17:32:00\" \"2019-01-05 10:33:00\" ...\n $ province_th                : chr [1:12986] \"นครปฐม\" \"นนทบุรี\" \"สมุทรปราการ\" \"กรุงเทพมหานคร\" ...\n $ province_en                : chr [1:12986] \"Nakhon Pathom\" \"Nonthaburi\" \"Samut Prakan\" \"Bangkok\" ...\n $ agency                     : chr [1:12986] \"department of rural roads\" \"department of highways\" \"department of highways\" \"expressway authority of thailand\" ...\n $ route                      : chr [1:12986] \"แยกทางหลวงหมายเลข 4 (กม.ที่ 51+920) - บ้านวัดละมุด\" \"คลองวัดแดง - บางบัวทอง\" \"ราษฎร์บูรณะ - พระสมุทรเจดีย์\" \"บางพลี-สุขสวัสดิ์\" ...\n $ vehicle_type               : chr [1:12986] \"motorcycle\" \"private/passenger car\" \"private/passenger car\" \"other\" ...\n $ presumed_cause             : chr [1:12986] \"speeding\" \"speeding\" \"running red lights/traffic signals\" \"other\" ...\n $ accident_type              : chr [1:12986] \"rollover/fallen on straight road\" \"rollover/fallen on straight road\" \"collision at intersection corner\" \"other\" ...\n $ number_of_vehicles_involved: num [1:12986] 1 1 2 1 1 1 1 1 1 1 ...\n $ number_of_fatalities       : num [1:12986] 0 0 0 0 0 1 1 0 0 0 ...\n $ number_of_injuries         : num [1:12986] 2 1 0 1 1 0 0 0 0 1 ...\n $ weather_condition          : chr [1:12986] \"clear\" \"clear\" \"clear\" \"clear\" ...\n $ road_description           : chr [1:12986] \"straight road\" \"straight road\" \"other\" \"other\" ...\n $ slope_description          : chr [1:12986] \"no slope\" \"no slope\" \"other\" \"other\" ...\n $ geometry                   :sfc_POINT of length 12986; first list element:  'XY' num [1:2] 627012 1533381\n $ incident_monthyear         : chr [1:12986] \"2019/01\" \"2019/01\" \"2019/01\" \"2019/01\" ...\n $ incident_year              : chr [1:12986] \"2019\" \"2019\" \"2019\" \"2019\" ...\n - attr(*, \"sf_column\")= chr \"geometry\"\n - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"names\")= chr [1:18] \"acc_code\" \"incident_datetime\" \"report_datetime\" \"province_th\" ...\n```\n\n\n:::\n:::\n\n\nThis part is to import **Thailand Roads (OpenStreetMap Export)** and converting the projected coordinate system of data to WGS 84 / UTM zone 47N and the EPSG code is 32647 to create `THR_sf`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTHR_sf <- st_read(dsn = \"data/geo\", \n                         layer = \"hotosm_tha_roads_lines_shp\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `hotosm_tha_roads_lines_shp' from data source \n  `C:\\Users\\tien_\\OneDrive\\SMU\\haductien1211\\ISSS626-GAA\\Take-home_Ex\\Take-home_Ex01\\data\\geo' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2792590 features and 14 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 97.34457 ymin: 5.643645 xmax: 105.6528 ymax: 20.47168\nCRS:           NA\n```\n\n\n:::\n\n```{.r .cell-code}\nTHR_sf <-  st_set_crs(THR_sf, 32647)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nTHR_sf_lines <- st_cast(THR_sf, \"LINESTRING\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nTHR_sf_lines\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 2792591 features and 14 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 97.34457 ymin: 5.643645 xmax: 105.6528 ymax: 20.47168\nProjected CRS: WGS 84 / UTM zone 47N\nFirst 10 features:\n             name               name_en        highway  surface smoothness\n1      ถนนฉลองกรุง    Chalong Krung Road      secondary    paved       <NA>\n2  ซอยฉลองกรุง 1/1 Soi Chalong Krung 1/1    residential     <NA>       <NA>\n3            <NA>                  <NA> secondary_link     <NA>       <NA>\n4            <NA>                  <NA>        service     <NA>       <NA>\n5      ถนนฉลองกรุง    Chalong Krung Road      secondary concrete       <NA>\n6            <NA>                  <NA>        service     <NA>       <NA>\n7     ถนนเอราวัณ 1         Erawan 1 Road       tertiary     <NA>       <NA>\n8            <NA>                  <NA>           path  unpaved       <NA>\n9            <NA>                  <NA>        service     <NA>       <NA>\n10           <NA>                  <NA>    residential     <NA>       <NA>\n   width lanes oneway bridge layer source        name_th     osm_id  osm_type\n1   <NA>  <NA>    yes   <NA>  <NA>   <NA>     ถนนฉลองกรุง 1125681229 ways_line\n2   <NA>  <NA>   <NA>   <NA>  <NA>   <NA> ซอยฉลองกรุง 1/1  594401607 ways_line\n3   <NA>  <NA>    yes   <NA>  <NA>   <NA>           <NA>  472283206 ways_line\n4   <NA>  <NA>   <NA>   <NA>  <NA>   <NA>           <NA>  594401608 ways_line\n5   <NA>     2    yes    yes     1   Bing     ถนนฉลองกรุง  116847248 ways_line\n6   <NA>  <NA>   <NA>   <NA>  <NA>   <NA>           <NA>  317485095 ways_line\n7   <NA>  <NA>   <NA>   <NA>  <NA>   <NA>    ถนนเอราวัณ 1  378672881 ways_line\n8   <NA>  <NA>   <NA>   <NA>  <NA>    GPS           <NA> 1238351123 ways_line\n9   <NA>  <NA>   <NA>   <NA>  <NA>   <NA>           <NA>  909942692 ways_line\n10  <NA>  <NA>   <NA>   <NA>  <NA>   <NA>           <NA>  694824299 ways_line\n                         geometry\n1  LINESTRING (100.7913 13.740...\n2  LINESTRING (100.7882 13.736...\n3  LINESTRING (100.7844 13.732...\n4  LINESTRING (100.7873 13.735...\n5  LINESTRING (100.7831 13.730...\n6  LINESTRING (100.7931 13.746...\n7  LINESTRING (100.6416 14.154...\n8  LINESTRING (98.87378 17.115...\n9  LINESTRING (100.193 13.6944...\n10 LINESTRING (100.1994 13.688...\n```\n\n\n:::\n:::\n\n\nThis part is to import **Thailand - Subnational Administrative Boundaries** as well as filtering out the region of study which is the Bangkok Metropolitan Region BMR and converting the projected coordinate system of data to WGS 84 / UTM zone 47N and the EPSG code is 32647 to create `THSAB_sf`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTHSAB_sf <- st_read(dsn = \"data/geo\", \n                         layer = \"tha_admbnda_adm2_rtsd_20220121\") %>%\n  filter(ADM1_EN %in% list(\"Bangkok\", \"Nonthaburi\", \"Nakhon Pathom\",\n                      \"Pathum Thani\", \"Samut Prakan\", \"Samut Sakhon\")) %>%\n  st_transform(crs = 32647)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm2_rtsd_20220121' from data source \n  `C:\\Users\\tien_\\OneDrive\\SMU\\haductien1211\\ISSS626-GAA\\Take-home_Ex\\Take-home_Ex01\\data\\geo' \n  using driver `ESRI Shapefile'\nSimple feature collection with 928 features and 19 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n# 4. Analysis\n\n## Quick analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(accident_data_sf) +\n  geom_bar(aes(x = incident_monthyear), \n                 bin = 100, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  xlab(\"Time\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-8-1.png){width=2400}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(accident_data_sf) +\n  geom_bar(aes(x = province_en), \n                 bin = 48, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  xlab(\"Province\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-9-1.png){width=1200}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(THSAB_sf) +\n  tm_polygons() +\ntm_shape(accident_data_sf) +\n  tm_dots() +\ntm_facets(by = \"weather_condition\",\n          free.coords = FALSE,\n          free.scales = FALSE,\n          drop.units = TRUE)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-10-1.png){width=1200}\n:::\n\n```{.r .cell-code}\n#   tm_dots()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(THSAB_sf) +\n  tm_polygons() +\ntm_shape(accident_data_sf) +\n  tm_dots() \n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-11-1.png){width=1200}\n:::\n\n```{.r .cell-code}\n# tm_shape(THR_sf) +\n#   tm_lines()\n```\n:::\n\n\n\n## Kernel Density Estimation\n\n::: {.cell}\n\n```{.r .cell-code}\naccident_data <- as_Spatial(accident_data_sf)\nTHSAB <- as_Spatial(THSAB_sf)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\naccident_data_sp <- as(accident_data, \"SpatialPoints\")\nTHSAB_sp <- as(THSAB, \"SpatialPolygons\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\naccident_data_ppp <- as.ppp(accident_data_sf)\nany(duplicated(accident_data_ppp))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(accident_data_ppp)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nTHSAB_owin <- as.owin(THSAB_sf)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(THSAB_owin)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\naccident_data_owin_ppp <- accident_data_ppp[THSAB_owin]\naccident_data_owin_ppp.km <- rescale.ppp(accident_data_owin_ppp, 1000, \"km\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nkde_accident_data_bw <- density(accident_data_owin_ppp.km,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                              kernel=\"quartic\") \nplot(kde_accident_data_bw, main = \"Fixed bandwidth\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-19-1.png){width=1200}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nkde_accident_data_adaptive <- adaptive.density(accident_data_owin_ppp.km, method=\"kernel\")\nplot(kde_accident_data_adaptive)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-20-1.png){width=1200}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nBKroad <- st_intersects(THSAB_sf, accident_data_sf)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlixels <- lixelize_lines(THR_sf_lines, \n                         lx_length = 5000, \n                         mindist = 2000)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsamples <- lines_center(lixels)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nTHR_sf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 2792590 features and 14 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 97.34457 ymin: 5.643645 xmax: 105.6528 ymax: 20.47168\nProjected CRS: WGS 84 / UTM zone 47N\nFirst 10 features:\n             name               name_en        highway  surface smoothness\n1      ถนนฉลองกรุง    Chalong Krung Road      secondary    paved       <NA>\n2  ซอยฉลองกรุง 1/1 Soi Chalong Krung 1/1    residential     <NA>       <NA>\n3            <NA>                  <NA> secondary_link     <NA>       <NA>\n4            <NA>                  <NA>        service     <NA>       <NA>\n5      ถนนฉลองกรุง    Chalong Krung Road      secondary concrete       <NA>\n6            <NA>                  <NA>        service     <NA>       <NA>\n7     ถนนเอราวัณ 1         Erawan 1 Road       tertiary     <NA>       <NA>\n8            <NA>                  <NA>           path  unpaved       <NA>\n9            <NA>                  <NA>        service     <NA>       <NA>\n10           <NA>                  <NA>    residential     <NA>       <NA>\n   width lanes oneway bridge layer source        name_th     osm_id  osm_type\n1   <NA>  <NA>    yes   <NA>  <NA>   <NA>     ถนนฉลองกรุง 1125681229 ways_line\n2   <NA>  <NA>   <NA>   <NA>  <NA>   <NA> ซอยฉลองกรุง 1/1  594401607 ways_line\n3   <NA>  <NA>    yes   <NA>  <NA>   <NA>           <NA>  472283206 ways_line\n4   <NA>  <NA>   <NA>   <NA>  <NA>   <NA>           <NA>  594401608 ways_line\n5   <NA>     2    yes    yes     1   Bing     ถนนฉลองกรุง  116847248 ways_line\n6   <NA>  <NA>   <NA>   <NA>  <NA>   <NA>           <NA>  317485095 ways_line\n7   <NA>  <NA>   <NA>   <NA>  <NA>   <NA>    ถนนเอราวัณ 1  378672881 ways_line\n8   <NA>  <NA>   <NA>   <NA>  <NA>    GPS           <NA> 1238351123 ways_line\n9   <NA>  <NA>   <NA>   <NA>  <NA>   <NA>           <NA>  909942692 ways_line\n10  <NA>  <NA>   <NA>   <NA>  <NA>   <NA>           <NA>  694824299 ways_line\n                         geometry\n1  MULTILINESTRING ((100.7913 ...\n2  MULTILINESTRING ((100.7882 ...\n3  MULTILINESTRING ((100.7844 ...\n4  MULTILINESTRING ((100.7873 ...\n5  MULTILINESTRING ((100.7831 ...\n6  MULTILINESTRING ((100.7931 ...\n7  MULTILINESTRING ((100.6416 ...\n8  MULTILINESTRING ((98.87378 ...\n9  MULTILINESTRING ((100.193 1...\n10 MULTILINESTRING ((100.1994 ...\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# densities <- nkde(THR_sf_lines, \n#                   events = accident_data_sf,\n#                   w = rep(1, nrow(accident_data_sf)),\n#                   samples = samples,\n#                   kernel_name = \"quartic\",\n#                   bw = 300, \n#                   div= \"bw\", \n#                   method = \"continuous\", \n#                   digits = 1, \n#                   tol = 1,\n#                   grid_shape = c(1,1), \n#                   max_depth = 15,\n#                   agg = NULL,\n#                   sparse = TRUE,\n#                   verbose = FALSE)\n```\n:::",
    "supporting": [
      "Take-home_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}