{
  "hash": "2e5969f73b6267a40a942a4527e6b067",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Exercise 5\"\nauthor: \"Ha Duc Tien\"\ndate: \"September 23, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  message: false\n  freeze: true\n---\n\n\n# 1. Getting started\n\nThe below 4 packages will be used\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, tmap, sfdep, tidyverse)\n```\n:::\n\n\n# 2. The data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan <- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Hunan' from data source \n  `C:\\Users\\tien_\\OneDrive\\SMU\\haductien1211\\ISSS626-GAA\\In-class_Ex\\In-class_Ex05\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan_GDPPC <- left_join(hunan,hunan2012) %>%\n  select(1:4, 7, 15)\n```\n:::\n\n\n# 3. Global meaures of spaitial association\n\n## Visualising \n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(hunan_GDPPC) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          palette=\"Blues\",\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Distribution of GDPPC\")\n```\n\n::: {.cell-output-display}\n![](In-class_Ex05_files/figure-html/unnamed-chunk-5-1.png){width=1200}\n:::\n:::\n\n\n## 3.1 Diriving Queen's continuity weights: sfdep methods\n\n-   nb: a neighbor list objects as created by st_neighbors().\n-   style: default \"W\" for row stadarized weights\n-   allow_zero: if TRUE assisgns zero as lagged value to zone without neighbors\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- hunan_GDPPC %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1)\n```\n:::\n\n\n## 3.2 Computing global Moran's I\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoranI <- global_moran(wm_q$GDPPC,\n                       wm_q$nb,\n                       wm_q$wt)\nmoranI\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$I\n[1] 0.30075\n\n$K\n[1] 7.640659\n```\n\n\n:::\n:::\n\n\n## 3.3 Performing Global Moran'I test\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_test(wm_q$GDPPC,\n                  wm_q$nb,\n                  wm_q$wt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n```\n\n\n:::\n:::\n\n\n::: callout-tip\nSince p-value \\< 0.05 based on the above result, we could reject the null hypothesis\n:::\n\n## 3.4 Performing Global Moran's I permutation test\n\n::: panel-tabset\n## Step 1:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n```\n:::\n\n\n## Step 2:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_perm(wm_q$GDPPC,\n                  wm_q$nb,\n                  wm_q$wt,\n                  nsim = 99)\n```\n:::\n\n\n## Result:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.30075, observed rank = 100, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n:::\n\n## 3.5 Computing local Moran's I\n\nWe will learn to calculate local Moran's I using `local_moran()`\n\n:::panel-tabset\n\n## The code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa <- wm_q %>%\n  mutate(local_moran = local_moran(GDPPC,\n                                   nb,\n                                   wt,\n                                   nsim = 99),\n         .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n\n## The ouput\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(lisa)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 20 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 110.4922 ymin: 28.61762 xmax: 112.3013 ymax: 30.12812\nGeodetic CRS:  WGS 84\n# A tibble: 6 × 21\n        ii        eii     var_ii    z_ii  p_ii p_ii_sim p_folded_sim skewness\n     <dbl>      <dbl>      <dbl>   <dbl> <dbl>    <dbl>        <dbl>    <dbl>\n1 -0.00147  0.00177   0.000418   -0.158  0.874     0.82         0.41   -0.812\n2  0.0259   0.00641   0.0105      0.190  0.849     0.96         0.48   -1.09 \n3 -0.0120  -0.0374    0.102       0.0796 0.937     0.76         0.38    0.824\n4  0.00102 -0.0000349 0.00000437  0.506  0.613     0.64         0.32    1.04 \n5  0.0148  -0.00340   0.00165     0.449  0.654     0.5          0.25    1.64 \n6 -0.0388  -0.00339   0.00545    -0.480  0.631     0.82         0.41    0.614\n# ℹ 13 more variables: kurtosis <dbl>, mean <fct>, median <fct>, pysal <fct>,\n#   nb <nb>, wt <list>, NAME_2 <chr>, ID_3 <int>, NAME_3 <chr>,\n#   ENGTYPE_3 <chr>, County <chr>, GDPPC <dbl>, geometry <POLYGON [°]>\n```\n\n\n:::\n:::\n\n\n:::\n\n## 3.6 Visualizing local Moran's I\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode('plot')\n\ntm_shape(lisa) +\n  tm_fill('ii') +\n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of GDPPC\",\n            main.title.size = 2)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex05_files/figure-html/unnamed-chunk-14-1.png){width=1200}\n:::\n:::\n\n\n\n## 3.7 Visualising local Moran's I and p-value\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap1 <- tm_shape(lisa) +\n          tm_fill('ii') +\n          tm_borders(alpha = 0.5) +\n          tm_view(set.zoom.limits = c(6,8)) +\n          tm_layout(main.title = \"local Moran's I of GDPPC\",\n                    main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa) +\n          tm_fill('p_ii',\n                  breaks=c(-Inf, 0.001, 0.01, 0.05, Inf)) +\n          tm_borders(alpha = 0.5) +\n          tm_layout(main.title = \"p_value of local Moran's I of GDPPC\",\n                    main.title.size = 0.8)\n\ntmap_arrange(map1, map2, asp=1, ncol=2)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex05_files/figure-html/unnamed-chunk-15-1.png){width=1200}\n:::\n:::\n\n\n## 3.8 Visualising LISA map\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_sig <-lisa %>%\n  filter(p_ii < 0.05)\n\ntmap_mode('plot')\n\ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_sig) +\n  tm_fill(\"mean\") +\n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex05_files/figure-html/unnamed-chunk-16-1.png){width=1200}\n:::\n:::\n\n## 3.9 Computing local Gi* Statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_idw <- hunan_GDPPC %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_inverse_distance(nb,\n                                  geometry,\n                                  scale = 1,\n                                  alpha = 1),\n         .before = 1)\n```\n:::\n\n\nNow we compute local Gi* by using the code chunk below\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHCSA <- wm_idw %>%\n  mutate(local_Gi = local_gstar_perm(GDPPC,\n                                     nb,\n                                     wt,\n                                     nsim = 99),\n         .before = 1) %>%\n  unnest(local_Gi)\n\nHCSA\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 88 features and 18 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n# A tibble: 88 × 19\n   gi_star cluster   e_gi     var_gi std_dev p_value p_sim p_folded_sim skewness\n     <dbl> <fct>    <dbl>      <dbl>   <dbl>   <dbl> <dbl>        <dbl>    <dbl>\n 1  0.0416 Low     0.0114 0.00000641  0.0493 9.61e-1  0.7          0.35    0.875\n 2 -0.333  Low     0.0106 0.00000384 -0.0941 9.25e-1  1            0.5     0.661\n 3  0.281  High    0.0126 0.00000751 -0.151  8.80e-1  0.9          0.45    0.640\n 4  0.411  High    0.0118 0.00000922  0.264  7.92e-1  0.6          0.3     0.853\n 5  0.387  High    0.0115 0.00000956  0.339  7.34e-1  0.62         0.31    1.07 \n 6 -0.368  High    0.0118 0.00000591 -0.583  5.60e-1  0.72         0.36    0.594\n 7  3.56   High    0.0151 0.00000731  2.61   9.01e-3  0.06         0.03    1.09 \n 8  2.52   High    0.0136 0.00000614  1.49   1.35e-1  0.2          0.1     1.12 \n 9  4.56   High    0.0144 0.00000584  3.53   4.17e-4  0.04         0.02    1.23 \n10  1.16   Low     0.0104 0.00000370  1.82   6.86e-2  0.12         0.06    0.416\n# ℹ 78 more rows\n# ℹ 10 more variables: kurtosis <dbl>, nb <nb>, wt <list>, NAME_2 <chr>,\n#   ID_3 <int>, NAME_3 <chr>, ENGTYPE_3 <chr>, County <chr>, GDPPC <dbl>,\n#   geometry <POLYGON [°]>\n```\n\n\n:::\n:::\n\n\n\n## 3.10 Visualising Gi*\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode('plot')\n\ntm_shape(HCSA) +\n  tm_fill(\"gi_star\") +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex05_files/figure-html/unnamed-chunk-19-1.png){width=1200}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nHCSA_sig <-HCSA %>%\n  filter(p_sim < 0.05)\n\ntmap_mode('plot')\n\ntm_shape(HCSA) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(HCSA_sig) +\n  tm_fill(\"cluster\") +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex05_files/figure-html/unnamed-chunk-20-1.png){width=1200}\n:::\n:::\n",
    "supporting": [
      "In-class_Ex05_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}